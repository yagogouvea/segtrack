generator client {
  provider = "prisma-client-js"
  previewFeatures = ["metrics"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Cliente {
  id               Int                     @id @default(autoincrement())
  nome             String
  cnpj             String
  contato          String?
  telefone         String?
  email            String?
  endereco         String?
  camposAdicionais CampoAdicionalCliente[]
  contratos        Contrato[]
}

model CampoAdicionalCliente {
  id        Int     @id @default(autoincrement())
  clienteId Int
  label     String
  campo     String
  cliente   Cliente @relation(fields: [clienteId], references: [id])

  @@index([clienteId])
}

model Contrato {
  id                   Int      @id @default(autoincrement())
  clienteId            Int
  nome_interno         String?
  tipo                 String?
  regiao               String?
  valor_acionamento    Float?
  valor_nao_recuperado Float?
  valor_hora_extra     Float?
  valor_km_extra       Float?
  franquia_horas       String?
  franquia_km          Int?
  valor_km            Float?
  valor_base          Float?
  permite_negociacao   Boolean? @default(false)
  cliente              Cliente  @relation(fields: [clienteId], references: [id])

  @@index([clienteId])
}

model Prestador {
  id                Int                    @id @default(autoincrement())
  nome              String
  cpf               String
  cod_nome          String?
  telefone          String?
  email             String?
  aprovado          Boolean                @default(false)
  tipo_pix          String?
  chave_pix         String?
  cep               String?
  endereco          String?
  bairro            String?
  cidade            String?
  estado            String?
  valor_acionamento Float?                 @default(0)
  franquia_horas    String?                @default("")
  franquia_km       Float?                 @default(0)
  valor_hora_adc    Float?                 @default(0)
  valor_km_adc      Float?                 @default(0)
  criado_em         DateTime               @default(now())
  origem            String?                @default("interno")
  funcoes           FuncaoPrestador[]
  regioes           RegiaoPrestador[]
  veiculos          TipoVeiculoPrestador[]
}

model FuncaoPrestador {
  id          Int       @id @default(autoincrement())
  funcao      String
  prestadorId Int
  prestador   Prestador @relation(fields: [prestadorId], references: [id])

  @@index([prestadorId])
}

model RegiaoPrestador {
  id          Int       @id @default(autoincrement())
  regiao      String
  prestadorId Int
  prestador   Prestador @relation(fields: [prestadorId], references: [id])

  @@index([prestadorId])
}

model TipoVeiculoPrestador {
  id          Int       @id @default(autoincrement())
  tipo        String
  prestadorId Int
  prestador   Prestador @relation(fields: [prestadorId], references: [id])

  @@index([prestadorId])
}

model Veiculo {
  id         Int      @id @default(autoincrement())
  placa      String   @unique
  modelo     String?
  marca      String?
  cor        String?
  fabricante String?
  ano        Int?
  createdAt  DateTime @default(now())
}

model Ocorrencia {
  id                  Int       @id @default(autoincrement())
  placa1              String
  placa2              String?
  placa3              String?
  modelo1             String?
  cor1                String?
  cliente             String
  tipo                String
  tipo_veiculo        String?
  coordenadas         String?
  endereco            String?
  bairro              String?
  cidade              String?
  estado              String?
  cpf_condutor        String?
  nome_condutor       String?
  transportadora      String?
  valor_carga         Float?
  notas_fiscais       String?
  os                  String?
  origem_bairro       String?
  origem_cidade       String?
  origem_estado       String?
  prestador           String?
  inicio              DateTime?
  chegada             DateTime?
  termino             DateTime?
  km                  Float?
  despesas            Float?
  descricao           String?
  resultado           String?
  status              String @default("em_andamento")
  encerrada_em        DateTime?
  criado_em           DateTime  @default(now())
  atualizado_em       DateTime  @updatedAt
  data_acionamento    DateTime?
  km_final            Float?
  km_inicial          Float?
  despesas_detalhadas String?
  fotos               Foto[]

  @@index([placa1])
  @@index([status])
}

model Foto {
  id           Int        @id @default(autoincrement())
  url          String
  legenda      String
  ocorrenciaId Int
  createdAt    DateTime   @default(now())
  ocorrencia   Ocorrencia @relation(fields: [ocorrenciaId], references: [id])

  @@index([ocorrenciaId])
}

model Relatorio {
  id        Int      @id @default(autoincrement())
  nome      String
  data      DateTime @default(now())
  conteudo  String
  tipo      String
}

enum UserRole {
  admin
  manager
  operator
  client
}

model User {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  passwordHash String
  role         UserRole @default(operator)
  permissions  String?  // JSON string of permissions
  active       Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
} 