const { Client } = require('pg');

async function testPostgresWithSSL() {
  const config = {
    host: 'segtrackdb.cyv2oismclv3.us-east-1.rds.amazonaws.com',
    port: 5432,
    user: 'postgres',
    password: '%t%E6G_$',
    database: 'segtrackdb',
    connectionTimeoutMillis: 30000,
    query_timeout: 30000,
    // Configura√ß√µes SSL para AWS RDS
    ssl: {
      rejectUnauthorized: false, // Permite certificados auto-assinados
      ca: undefined,
      key: undefined,
      cert: undefined
    }
  };

  console.log('üîç Teste de Conex√£o PostgreSQL com SSL - AWS RDS');
  console.log('================================================');
  console.log('Configura√ß√µes de conex√£o:', {
    host: config.host,
    port: config.port,
    user: config.user,
    database: config.database,
    ssl: 'habilitado com rejectUnauthorized: false'
  });

  const client = new Client(config);

  try {
    console.log('\nüì° Iniciando conex√£o com SSL...');
    console.log('‚è±Ô∏è  Timeout configurado: 30 segundos');
    
    const startTime = Date.now();
    await client.connect();
    const endTime = Date.now();
    
    console.log(`‚úÖ Conex√£o SSL bem-sucedida em ${endTime - startTime}ms`);
    
    // Testando uma query simples
    console.log('\nüîç Testando query simples...');
    const result = await client.query('SELECT NOW() as current_time');
    console.log('‚úÖ Query executada com sucesso:', result.rows[0]);
    
    await client.end();
    console.log('\n‚úÖ Conex√£o SSL encerrada com sucesso!');
    console.log('\nüéâ Teste SSL conclu√≠do - Banco PostgreSQL acess√≠vel via SSL!');
    
  } catch (error) {
    console.error('\n‚ùå Erro de conex√£o SSL:', error.message);
    console.error('\nüîç Detalhes do erro:');
    console.error(`   - C√≥digo: ${error.code || 'N/A'}`);
    console.error(`   - Tipo: ${error.constructor.name}`);
    
    if (error.message.includes('SSL')) {
      console.log('\nüí° Tentando sem SSL...');
      await testPostgresWithoutSSL();
    }
  }
}

async function testPostgresWithoutSSL() {
  const config = {
    host: 'segtrackdb.cyv2oismclv3.us-east-1.rds.amazonaws.com',
    port: 5432,
    user: 'postgres',
    password: '%t%E6G_$',
    database: 'segtrackdb',
    connectionTimeoutMillis: 30000,
    ssl: false
  };

  const client = new Client(config);

  try {
    console.log('\nüì° Tentando conex√£o sem SSL...');
    await client.connect();
    console.log('‚úÖ Conex√£o sem SSL bem-sucedida!');
    
    const result = await client.query('SELECT NOW() as current_time');
    console.log('‚úÖ Query executada com sucesso:', result.rows[0]);
    
    await client.end();
    console.log('\nüéâ Conex√£o sem SSL funcionou!');
    
  } catch (error) {
    console.error('\n‚ùå Erro de conex√£o sem SSL:', error.message);
    console.log('\nüîß Verifica√ß√µes necess√°rias:');
    console.log('   1. Verificar se o RDS est√° rodando');
    console.log('   2. Verificar Security Group (porta 5432)');
    console.log('   3. Verificar se o IP est√° liberado');
    console.log('   4. Verificar credenciais');
  }
}

testPostgresWithSSL(); 